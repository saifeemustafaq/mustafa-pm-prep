{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///Users/mustafasaifee/Downloads/gh/mustafa-pm-prep/src/components/ui/Progress.tsx"],"sourcesContent":["import clsx from 'clsx';\n\ninterface ProgressProps {\n  value: number;\n  label: string;\n  size?: 'sm' | 'md' | 'lg';\n  color?: string;\n  className?: string;\n}\n\nexport default function Progress({ value, label, size = 'md', color, className }: ProgressProps) {\n  const heights = {\n    sm: 'h-1.5',\n    md: 'h-2',\n    lg: 'h-3',\n  };\n\n  return (\n    <div className={clsx(\"w-full group\", className)}>\n      <div className=\"flex justify-between items-center mb-1\">\n        <span className=\"text-xs font-medium text-gray-500 transition-colors duration-200 group-hover:text-gray-700\">\n          {label}\n        </span>\n        <span className=\"text-xs font-medium text-blue-600 transition-colors duration-200 group-hover:text-blue-700\">\n          {value}%\n        </span>\n      </div>\n      <div className={`w-full bg-gray-100 rounded-full overflow-hidden ${heights[size]} transition-all duration-200 group-hover:bg-gray-200`}>\n        <div\n          className=\"transition-all duration-500 rounded-full\"\n          style={{ \n            width: `${value}%`,\n            height: '100%',\n            background: color || 'linear-gradient(to right, #3b82f6, #2563eb)'\n          }}\n        />\n      </div>\n    </div>\n  );\n} "],"names":[],"mappings":";;;;AAAA;;;AAUe,SAAS,SAAS,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,IAAI,EAAE,KAAK,EAAE,SAAS,EAAiB;IAC7F,MAAM,UAAU;QACd,IAAI;QACJ,IAAI;QACJ,IAAI;IACN;IAEA,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,qIAAA,CAAA,UAAI,AAAD,EAAE,gBAAgB;;0BACnC,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAK,WAAU;kCACb;;;;;;kCAEH,8OAAC;wBAAK,WAAU;;4BACb;4BAAM;;;;;;;;;;;;;0BAGX,8OAAC;gBAAI,WAAW,CAAC,gDAAgD,EAAE,OAAO,CAAC,KAAK,CAAC,oDAAoD,CAAC;0BACpI,cAAA,8OAAC;oBACC,WAAU;oBACV,OAAO;wBACL,OAAO,GAAG,MAAM,CAAC,CAAC;wBAClB,QAAQ;wBACR,YAAY,SAAS;oBACvB;;;;;;;;;;;;;;;;;AAKV"}},
    {"offset": {"line": 109, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 115, "column": 0}, "map": {"version":3,"sources":["file:///Users/mustafasaifee/Downloads/gh/mustafa-pm-prep/src/lib/cache.ts"],"sourcesContent":["export const CACHE_PREFIX = 'pm-interview-prep';\nexport const CACHE_VERSION = 'v1';\n\nexport const CacheKeys = {\n  progress: (category: string) => `${CACHE_PREFIX}:${CACHE_VERSION}:progress:${category}`,\n  timestamp: () => `${CACHE_PREFIX}:${CACHE_VERSION}:timestamp`,\n};\n\nexport const isBrowser = typeof window !== 'undefined';\n\nexport const getFromCache = (key: string): string | null => {\n  if (!isBrowser) return null;\n  try {\n    return localStorage.getItem(key);\n  } catch (e) {\n    console.error('Error reading from cache:', e);\n    return null;\n  }\n};\n\nexport const setInCache = (key: string, value: string): void => {\n  if (!isBrowser) return;\n  try {\n    localStorage.setItem(key, value);\n    updateCacheTimestamp();\n  } catch (e) {\n    console.error('Error writing to cache:', e);\n  }\n};\n\nexport const updateCacheTimestamp = (): void => {\n  if (!isBrowser) return;\n  try {\n    localStorage.setItem(CacheKeys.timestamp(), new Date().toISOString());\n  } catch (e) {\n    console.error('Error updating cache timestamp:', e);\n  }\n};\n\nexport const clearAllCache = (): void => {\n  if (!isBrowser) return;\n  try {\n    const keys = Object.keys(localStorage);\n    keys.forEach(key => {\n      if (key.startsWith(CACHE_PREFIX)) {\n        localStorage.removeItem(key);\n      }\n    });\n    window.location.reload(); // Force reload to reset all states\n  } catch (e) {\n    console.error('Error clearing cache:', e);\n  }\n}; "],"names":[],"mappings":";;;;;;;;;;AAAO,MAAM,eAAe;AACrB,MAAM,gBAAgB;AAEtB,MAAM,YAAY;IACvB,UAAU,CAAC,WAAqB,GAAG,aAAa,CAAC,EAAE,cAAc,UAAU,EAAE,UAAU;IACvF,WAAW,IAAM,GAAG,aAAa,CAAC,EAAE,cAAc,UAAU,CAAC;AAC/D;AAEO,MAAM,YAAY,gBAAkB;AAEpC,MAAM,eAAe,CAAC;IAC3B,wCAAgB,OAAO;;AAOzB;AAEO,MAAM,aAAa,CAAC,KAAa;IACtC,wCAAgB;;AAOlB;AAEO,MAAM,uBAAuB;IAClC,wCAAgB;;AAMlB;AAEO,MAAM,gBAAgB;IAC3B,wCAAgB;;AAYlB"}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 154, "column": 0}, "map": {"version":3,"sources":["file:///Users/mustafasaifee/Downloads/gh/mustafa-pm-prep/src/lib/constants.ts"],"sourcesContent":["export type CategoryId = 'behavioral' | 'product-design' | 'strategy' | 'execution' | 'estimation';\n\nexport interface CategoryConfig {\n  color: string;\n  gradient: string;\n  activeGradient: string;\n  textColor: string;\n  borderColor: string;\n  progressColor: string;\n}\n\nexport const categoryConfig: Record<CategoryId, CategoryConfig> = {\n  behavioral: {\n    color: 'purple',\n    gradient: 'from-purple-50 to-purple-100',\n    activeGradient: 'from-purple-100 to-purple-200',\n    textColor: 'text-purple-700',\n    borderColor: 'border-purple-200',\n    progressColor: 'linear-gradient(to right, #9333ea, #7e22ce)',\n  },\n  'product-design': {\n    color: 'blue',\n    gradient: 'from-blue-50 to-blue-100',\n    activeGradient: 'from-blue-100 to-blue-200',\n    textColor: 'text-blue-700',\n    borderColor: 'border-blue-200',\n    progressColor: 'linear-gradient(to right, #3b82f6, #2563eb)',\n  },\n  strategy: {\n    color: 'emerald',\n    gradient: 'from-emerald-50 to-emerald-100',\n    activeGradient: 'from-emerald-100 to-emerald-200',\n    textColor: 'text-emerald-700',\n    borderColor: 'border-emerald-200',\n    progressColor: 'linear-gradient(to right, #10b981, #059669)',\n  },\n  execution: {\n    color: 'orange',\n    gradient: 'from-orange-50 to-orange-100',\n    activeGradient: 'from-orange-100 to-orange-200',\n    textColor: 'text-orange-700',\n    borderColor: 'border-orange-200',\n    progressColor: 'linear-gradient(to right, #f97316, #ea580c)',\n  },\n  estimation: {\n    color: 'rose',\n    gradient: 'from-rose-50 to-rose-100',\n    activeGradient: 'from-rose-100 to-rose-200',\n    textColor: 'text-rose-700',\n    borderColor: 'border-rose-200',\n    progressColor: 'linear-gradient(to right, #f43f5e, #e11d48)',\n  },\n}; "],"names":[],"mappings":";;;AAWO,MAAM,iBAAqD;IAChE,YAAY;QACV,OAAO;QACP,UAAU;QACV,gBAAgB;QAChB,WAAW;QACX,aAAa;QACb,eAAe;IACjB;IACA,kBAAkB;QAChB,OAAO;QACP,UAAU;QACV,gBAAgB;QAChB,WAAW;QACX,aAAa;QACb,eAAe;IACjB;IACA,UAAU;QACR,OAAO;QACP,UAAU;QACV,gBAAgB;QAChB,WAAW;QACX,aAAa;QACb,eAAe;IACjB;IACA,WAAW;QACT,OAAO;QACP,UAAU;QACV,gBAAgB;QAChB,WAAW;QACX,aAAa;QACb,eAAe;IACjB;IACA,YAAY;QACV,OAAO;QACP,UAAU;QACV,gBAAgB;QAChB,WAAW;QACX,aAAa;QACb,eAAe;IACjB;AACF"}},
    {"offset": {"line": 199, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 205, "column": 0}, "map": {"version":3,"sources":["file:///Users/mustafasaifee/Downloads/gh/mustafa-pm-prep/src/lib/actions.ts"],"sourcesContent":["'use server';\n\nimport fs from 'fs';\nimport path from 'path';\nimport { CategoryId } from './constants';\n\nexport async function getQuestionCounts(): Promise<Record<CategoryId, number>> {\n  const contentDir = path.join(process.cwd(), 'src/content');\n  const counts: Partial<Record<CategoryId, number>> = {};\n\n  const files = fs.readdirSync(contentDir);\n  for (const file of files) {\n    if (file.endsWith('.md')) {\n      const category = file.replace('.md', '') as CategoryId;\n      const content = fs.readFileSync(path.join(contentDir, file), 'utf8');\n      const sections = content.split('\\n## ');\n      let questionCount = 0;\n      \n      sections.slice(1).forEach(section => {\n        const questionBlocks = section.split('\\n### ').slice(1);\n        questionCount += questionBlocks.length;\n      });\n\n      counts[category] = questionCount;\n    }\n  }\n\n  return counts as Record<CategoryId, number>;\n}\n\nexport async function getMarkdownContent(category: CategoryId): Promise<string> {\n  const filePath = path.join(process.cwd(), 'src/content', `${category}.md`);\n  return fs.readFileSync(filePath, 'utf8');\n} "],"names":[],"mappings":";;;;;;IAMsB;IAwBA"}},
    {"offset": {"line": 213, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 219, "column": 0}, "map": {"version":3,"sources":["file:///Users/mustafasaifee/Downloads/gh/mustafa-pm-prep/src/components/layout/Sidebar.tsx"],"sourcesContent":["'use client';\n\nimport { FC, useEffect, useState } from 'react';\nimport Link from 'next/link';\nimport { usePathname } from 'next/navigation';\nimport clsx from 'clsx';\nimport Progress from '@/components/ui/Progress';\nimport { CacheKeys, getFromCache, clearAllCache } from '@/lib/cache';\nimport { categoryConfig, CategoryId } from '@/lib/constants';\nimport { getQuestionCounts } from '@/lib/actions';\n\ninterface Category {\n  name: string;\n  href: string;\n  id: CategoryId;\n}\n\nconst categories: Category[] = [\n  { name: 'Behavioral Questions', href: '/behavioral', id: 'behavioral' },\n  { name: 'Product Design Questions', href: '/product-design', id: 'product-design' },\n  { name: 'Strategy Questions', href: '/strategy', id: 'strategy' },\n  { name: 'Execution Questions', href: '/execution', id: 'execution' },\n  { name: 'Estimation Questions', href: '/estimation', id: 'estimation' },\n];\n\nconst Sidebar: FC = () => {\n  const pathname = usePathname();\n  const [categoryProgress, setCategoryProgress] = useState<Record<CategoryId, number>>({} as Record<CategoryId, number>);\n  const [questionCounts, setQuestionCounts] = useState<Record<CategoryId, number>>({} as Record<CategoryId, number>);\n  const [isClearing, setIsClearing] = useState(false);\n\n  const calculateProgress = (counts: Record<CategoryId, number>) => {\n    return categories.reduce((acc, category) => {\n      const categoryId = category.id;\n      const saved = getFromCache(CacheKeys.progress(categoryId));\n      const completed = saved ? JSON.parse(saved).length : 0;\n      const total = counts[categoryId] || 0;\n      acc[categoryId] = total ? Math.round((completed / total) * 100) : 0;\n      return acc;\n    }, {} as Record<CategoryId, number>);\n  };\n\n  useEffect(() => {\n    const loadCounts = async () => {\n      const counts = await getQuestionCounts();\n      setQuestionCounts(counts);\n      const progress = calculateProgress(counts);\n      setCategoryProgress(progress);\n    };\n    loadCounts();\n  }, []);\n\n  useEffect(() => {\n    const loadProgress = () => {\n      const progress = calculateProgress(questionCounts);\n      setCategoryProgress(progress);\n    };\n\n    window.addEventListener('storage', loadProgress);\n    return () => window.removeEventListener('storage', loadProgress);\n  }, [questionCounts]);\n\n  const handleClearCache = async () => {\n    setIsClearing(true);\n    try {\n      clearAllCache();\n      const counts = await getQuestionCounts();\n      setQuestionCounts(counts);\n    } finally {\n      setIsClearing(false);\n    }\n  };\n\n  // Listen for progress updates\n  useEffect(() => {\n    const handleProgressUpdate = (event: CustomEvent<{ category: string; progress: number }>) => {\n      const { category, progress } = event.detail;\n      setCategoryProgress(prev => ({\n        ...prev,\n        [category]: progress\n      }));\n    };\n\n    window.addEventListener('progressUpdate', handleProgressUpdate as EventListener);\n    return () => {\n      window.removeEventListener('progressUpdate', handleProgressUpdate as EventListener);\n    };\n  }, []);\n\n  return (\n    <div className=\"fixed left-0 top-0 w-64 h-full flex flex-col bg-gradient-to-b from-gray-50 to-white border-r border-gray-200 shadow-sm\">\n      <div className=\"p-6 border-b border-gray-200 bg-white\">\n        <div className=\"flex items-center justify-between mb-6\">\n          <h1 className=\"text-2xl font-bold bg-gradient-to-r from-blue-600 to-indigo-600 text-transparent bg-clip-text\">\n            PM Interview Prep\n          </h1>\n        </div>\n        <button\n          onClick={handleClearCache}\n          disabled={isClearing}\n          className={clsx(\n            \"w-full px-3 py-2 text-sm rounded-lg transition-all duration-200\",\n            \"border border-red-200 text-red-600\",\n            \"hover:bg-red-100 active:bg-red-300\",\n            \"disabled:opacity-50 disabled:cursor-not-allowed\",\n            \"flex items-center justify-center gap-2\"\n          )}\n        >\n          {isClearing ? (\n            <>\n              <svg className=\"animate-spin h-4 w-4\" viewBox=\"0 0 24 24\">\n                <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" fill=\"none\" />\n                <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\" />\n              </svg>\n              Clearing...\n            </>\n          ) : (\n            <>\n              <svg className=\"w-4 h-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n              </svg>\n              Clear Progress\n            </>\n          )}\n        </button>\n      </div>\n      \n      <nav className=\"flex-1 overflow-y-auto px-3 py-2 space-y-4\">\n        {categories.map((category, index) => {\n          const config = categoryConfig[category.id];\n          const count = questionCounts[category.id] || 0;\n          const isActive = pathname === category.href;\n          \n          return (\n            <div key={category.href}>\n              {index > 0 && (\n                <div className=\"my-4 border-t border-gray-200\" />\n              )}\n              \n              <div className=\"space-y-1\">\n                <Link\n                  href={category.href}\n                  className={clsx(\n                    'block rounded-lg text-sm font-medium transition-all duration-200',\n                    'group relative',\n                    isActive\n                      ? `bg-gradient-to-r from-${config.color}-500 to-${config.color}-600 text-gray-900`\n                      : `hover:bg-gradient-to-r hover:from-${config.color}-500 hover:to-${config.color}-600 text-gray-800 hover:text-gray-900`\n                  )}\n                >\n                  <div className=\"px-4 py-2.5\">\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"relative\">\n                        {category.name}\n                        <span className={clsx(\n                          'absolute bottom-0 left-0 w-0 h-0.5 transition-all duration-200',\n                          'group-hover:w-full',\n                          isActive\n                            ? `bg-${config.color}-900`\n                            : `bg-${config.color}-400`\n                        )} />\n                      </span>\n                      <span className={clsx(\n                        \"text-xs font-normal\",\n                        isActive \n                          ? \"text-gray-900\"\n                          : \"text-gray-600 group-hover:text-gray-900\"\n                      )}>\n                        {count} questions\n                      </span>\n                    </div>\n                    \n                    <div className={clsx(\n                      'mt-2 transition-all duration-200',\n                      'group-hover:translate-x-1'\n                    )}>\n                      <Progress\n                        value={categoryProgress[category.id] || 0}\n                        label=\"Progress\"\n                        size=\"sm\"\n                        color={isActive ? config.progressColor : config.progressColor}\n                        className={clsx(\n                          'opacity-90',\n                          'group-hover:opacity-100'\n                        )}\n                      />\n                    </div>\n                  </div>\n                </Link>\n              </div>\n            </div>\n          );\n        })}\n      </nav>\n    </div>\n  );\n};\n\nexport default Sidebar; "],"names":[],"mappings":"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"}},
    {"offset": {"line": 537, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 543, "column": 0}, "map": {"version":3,"sources":["file:///Users/mustafasaifee/Downloads/gh/mustafa-pm-prep/src/components/CacheControl.tsx"],"sourcesContent":["'use client';\n\nimport { FC, useEffect, useState } from 'react';\nimport { CacheKeys, getFromCache } from '@/lib/cache';\n\nconst CacheControl: FC = () => {\n  const [lastUpdated, setLastUpdated] = useState<string>('Never');\n\n  useEffect(() => {\n    const timestamp = getFromCache(CacheKeys.timestamp());\n    if (timestamp) {\n      setLastUpdated(new Date(timestamp).toLocaleString());\n    }\n  }, []);\n\n  return (\n    <div className=\"text-sm text-gray-500\">\n      Last updated: {lastUpdated}\n    </div>\n  );\n};\n\nexport default CacheControl; "],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAKA,MAAM,eAAmB;IACvB,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IAEvD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,YAAY,CAAA,GAAA,mHAAA,CAAA,eAAY,AAAD,EAAE,mHAAA,CAAA,YAAS,CAAC,SAAS;QAClD,IAAI,WAAW;YACb,eAAe,IAAI,KAAK,WAAW,cAAc;QACnD;IACF,GAAG,EAAE;IAEL,qBACE,8OAAC;QAAI,WAAU;;YAAwB;YACtB;;;;;;;AAGrB;uCAEe"}},
    {"offset": {"line": 574, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 580, "column": 0}, "map": {"version":3,"sources":["file:///Users/mustafasaifee/Downloads/gh/mustafa-pm-prep/src/contexts/ProgressContext.tsx"],"sourcesContent":["'use client';\n\nimport { createContext, useContext, useEffect, useState } from 'react';\nimport { CategoryId } from '@/lib/constants';\nimport { CacheKeys, getFromCache, setInCache } from '@/lib/cache';\n\ninterface ProgressContextType {\n  progress: Record<CategoryId, Set<string>>;\n  updateProgress: (category: CategoryId, questionId: string, completed: boolean) => void;\n  getProgress: (category: CategoryId) => Set<string>;\n}\n\nconst ProgressContext = createContext<ProgressContextType | undefined>(undefined);\n\nexport function ProgressProvider({ children }: { children: React.ReactNode }) {\n  const [progress, setProgress] = useState<Record<CategoryId, Set<string>>>({});\n\n  // Load all progress on mount\n  useEffect(() => {\n    const loadAllProgress = () => {\n      const categories = ['behavioral', 'product-design', 'strategy', 'execution', 'estimation'] as CategoryId[];\n      const loadedProgress: Record<CategoryId, Set<string>> = {};\n\n      categories.forEach(category => {\n        const saved = getFromCache(CacheKeys.progress(category));\n        if (saved) {\n          try {\n            const parsed = JSON.parse(saved);\n            loadedProgress[category] = new Set(parsed);\n          } catch (e) {\n            console.error(`Error loading progress for ${category}:`, e);\n            loadedProgress[category] = new Set();\n          }\n        } else {\n          loadedProgress[category] = new Set();\n        }\n      });\n\n      setProgress(loadedProgress);\n    };\n\n    loadAllProgress();\n\n    // Listen for storage events from other tabs\n    const handleStorageChange = (e: StorageEvent) => {\n      if (e.key?.startsWith(`${CacheKeys.progress('')}`)) {\n        loadAllProgress();\n      }\n    };\n\n    window.addEventListener('storage', handleStorageChange);\n    return () => window.removeEventListener('storage', handleStorageChange);\n  }, []);\n\n  const updateProgress = (category: CategoryId, questionId: string, completed: boolean) => {\n    setProgress(prev => {\n      const categoryProgress = new Set(prev[category] || []);\n      if (completed) {\n        categoryProgress.add(questionId);\n      } else {\n        categoryProgress.delete(questionId);\n      }\n\n      // Save to localStorage\n      setInCache(\n        CacheKeys.progress(category),\n        JSON.stringify(Array.from(categoryProgress))\n      );\n\n      return {\n        ...prev,\n        [category]: categoryProgress\n      };\n    });\n  };\n\n  const getProgress = (category: CategoryId) => {\n    return progress[category] || new Set();\n  };\n\n  return (\n    <ProgressContext.Provider value={{ progress, updateProgress, getProgress }}>\n      {children}\n    </ProgressContext.Provider>\n  );\n}\n\nexport function useProgress() {\n  const context = useContext(ProgressContext);\n  if (!context) {\n    throw new Error('useProgress must be used within a ProgressProvider');\n  }\n  return context;\n} "],"names":[],"mappings":";;;;;AAEA;AAEA;AAJA;;;;AAYA,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAAmC;AAEhE,SAAS,iBAAiB,EAAE,QAAQ,EAAiC;IAC1E,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAmC,CAAC;IAE3E,6BAA6B;IAC7B,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,kBAAkB;YACtB,MAAM,aAAa;gBAAC;gBAAc;gBAAkB;gBAAY;gBAAa;aAAa;YAC1F,MAAM,iBAAkD,CAAC;YAEzD,WAAW,OAAO,CAAC,CAAA;gBACjB,MAAM,QAAQ,CAAA,GAAA,mHAAA,CAAA,eAAY,AAAD,EAAE,mHAAA,CAAA,YAAS,CAAC,QAAQ,CAAC;gBAC9C,IAAI,OAAO;oBACT,IAAI;wBACF,MAAM,SAAS,KAAK,KAAK,CAAC;wBAC1B,cAAc,CAAC,SAAS,GAAG,IAAI,IAAI;oBACrC,EAAE,OAAO,GAAG;wBACV,QAAQ,KAAK,CAAC,CAAC,2BAA2B,EAAE,SAAS,CAAC,CAAC,EAAE;wBACzD,cAAc,CAAC,SAAS,GAAG,IAAI;oBACjC;gBACF,OAAO;oBACL,cAAc,CAAC,SAAS,GAAG,IAAI;gBACjC;YACF;YAEA,YAAY;QACd;QAEA;QAEA,4CAA4C;QAC5C,MAAM,sBAAsB,CAAC;YAC3B,IAAI,EAAE,GAAG,EAAE,WAAW,GAAG,mHAAA,CAAA,YAAS,CAAC,QAAQ,CAAC,KAAK,GAAG;gBAClD;YACF;QACF;QAEA,OAAO,gBAAgB,CAAC,WAAW;QACnC,OAAO,IAAM,OAAO,mBAAmB,CAAC,WAAW;IACrD,GAAG,EAAE;IAEL,MAAM,iBAAiB,CAAC,UAAsB,YAAoB;QAChE,YAAY,CAAA;YACV,MAAM,mBAAmB,IAAI,IAAI,IAAI,CAAC,SAAS,IAAI,EAAE;YACrD,IAAI,WAAW;gBACb,iBAAiB,GAAG,CAAC;YACvB,OAAO;gBACL,iBAAiB,MAAM,CAAC;YAC1B;YAEA,uBAAuB;YACvB,CAAA,GAAA,mHAAA,CAAA,aAAU,AAAD,EACP,mHAAA,CAAA,YAAS,CAAC,QAAQ,CAAC,WACnB,KAAK,SAAS,CAAC,MAAM,IAAI,CAAC;YAG5B,OAAO;gBACL,GAAG,IAAI;gBACP,CAAC,SAAS,EAAE;YACd;QACF;IACF;IAEA,MAAM,cAAc,CAAC;QACnB,OAAO,QAAQ,CAAC,SAAS,IAAI,IAAI;IACnC;IAEA,qBACE,8OAAC,gBAAgB,QAAQ;QAAC,OAAO;YAAE;YAAU;YAAgB;QAAY;kBACtE;;;;;;AAGP;AAEO,SAAS;IACd,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT"}},
    {"offset": {"line": 670, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}