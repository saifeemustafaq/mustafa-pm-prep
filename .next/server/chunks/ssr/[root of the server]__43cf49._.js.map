{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/mustafasaifee/Downloads/gh/mustafa-pm-prep/src/app/page.tsx"],"sourcesContent":["export default function Home() {\n  return (\n    <div className=\"max-w-4xl mx-auto\">\n      <h1 className=\"text-3xl font-bold mb-6\">Welcome to PM Interview Prep</h1>\n      <p className=\"text-gray-600 mb-4\">\n        Select a category from the sidebar to start practicing interview questions.\n      </p>\n      \n      <div className=\"grid gap-4 mt-8\">\n        <div className=\"p-4 border rounded-lg bg-white shadow-sm\">\n          <h2 className=\"font-semibold mb-2\">Getting Started</h2>\n          <ul className=\"list-disc list-inside text-gray-600\">\n            <li>Choose a question category from the sidebar</li>\n            <li>Track your progress with checkboxes</li>\n            <li>Your progress is automatically saved</li>\n            <li>Practice regularly for better preparation</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAAe,SAAS;IACtB,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAA0B;;;;;;0BACxC,8OAAC;gBAAE,WAAU;0BAAqB;;;;;;0BAIlC,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAG,WAAU;sCAAqB;;;;;;sCACnC,8OAAC;4BAAG,WAAU;;8CACZ,8OAAC;8CAAG;;;;;;8CACJ,8OAAC;8CAAG;;;;;;8CACJ,8OAAC;8CAAG;;;;;;8CACJ,8OAAC;8CAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMhB"}},
    {"offset": {"line": 100, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 120, "column": 0}, "map": {"version":3,"sources":["file:///Users/mustafasaifee/Downloads/gh/mustafa-pm-prep/src/lib/actions.ts"],"sourcesContent":["'use server';\n\nimport fs from 'fs';\nimport path from 'path';\nimport { CategoryId } from './constants';\n\nexport async function getQuestionCounts(): Promise<Record<CategoryId, number>> {\n  const contentDir = path.join(process.cwd(), 'src/content');\n  const counts: Partial<Record<CategoryId, number>> = {};\n\n  const files = fs.readdirSync(contentDir);\n  for (const file of files) {\n    if (file.endsWith('.md')) {\n      const category = file.replace('.md', '') as CategoryId;\n      const content = fs.readFileSync(path.join(contentDir, file), 'utf8');\n      const sections = content.split('\\n## ');\n      let questionCount = 0;\n      \n      sections.slice(1).forEach(section => {\n        const questionBlocks = section.split('\\n### ').slice(1);\n        questionCount += questionBlocks.length;\n      });\n\n      counts[category] = questionCount;\n    }\n  }\n\n  return counts as Record<CategoryId, number>;\n}\n\nexport async function getMarkdownContent(category: CategoryId): Promise<string> {\n  const filePath = path.join(process.cwd(), 'src/content', `${category}.md`);\n  return fs.readFileSync(filePath, 'utf8');\n} "],"names":[],"mappings":";;;;;;AAEA;AACA;;;;;;AAGO,eAAe,uCAAe,GAAf;IACpB,MAAM,aAAa,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI;IAC5C,MAAM,SAA8C,CAAC;IAErD,MAAM,QAAQ,6FAAA,CAAA,UAAE,CAAC,WAAW,CAAC;IAC7B,KAAK,MAAM,QAAQ,MAAO;QACxB,IAAI,KAAK,QAAQ,CAAC,QAAQ;YACxB,MAAM,WAAW,KAAK,OAAO,CAAC,OAAO;YACrC,MAAM,UAAU,6FAAA,CAAA,UAAE,CAAC,YAAY,CAAC,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,YAAY,OAAO;YAC7D,MAAM,WAAW,QAAQ,KAAK,CAAC;YAC/B,IAAI,gBAAgB;YAEpB,SAAS,KAAK,CAAC,GAAG,OAAO,CAAC,CAAA;gBACxB,MAAM,iBAAiB,QAAQ,KAAK,CAAC,UAAU,KAAK,CAAC;gBACrD,iBAAiB,eAAe,MAAM;YACxC;YAEA,MAAM,CAAC,SAAS,GAAG;QACrB;IACF;IAEA,OAAO;AACT;AAEO,eAAe,uCAAgB,GAAhB,mBAAmB,QAAoB;IAC3D,MAAM,WAAW,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,eAAe,GAAG,SAAS,GAAG,CAAC;IACzE,OAAO,6FAAA,CAAA,UAAE,CAAC,YAAY,CAAC,UAAU;AACnC;;;IA3BsB;IAwBA;;AAxBA,+OAAA;AAwBA,+OAAA"}},
    {"offset": {"line": 163, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 169, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 172, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}