{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/mustafasaifee/Downloads/gh/mustafa-pm-prep/src/components/ui/QuestionCard.tsx"],"sourcesContent":["'use client';\n\nimport { FC } from 'react';\nimport { motion } from 'framer-motion';\nimport { Disclosure, Transition } from '@headlessui/react';\nimport clsx from 'clsx';\n\ninterface QuestionCardProps {\n  title: string;\n  content: string;\n  howToAnswer?: string;\n  example?: string;\n  isCompleted: boolean;\n  onToggleComplete: () => void;\n}\n\nconst QuestionCard: FC<QuestionCardProps> = ({\n  title,\n  content,\n  howToAnswer,\n  example,\n  isCompleted,\n  onToggleComplete,\n}) => {\n  const handleCheckboxClick = (e: React.MouseEvent) => {\n    e.stopPropagation(); // Prevent the Disclosure from toggling\n    onToggleComplete();\n  };\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      transition={{ duration: 0.3 }}\n      className={clsx(\n        \"bg-white rounded-xl shadow-sm border-2 overflow-hidden transition-all duration-200 relative\",\n        isCompleted ? \"border-emerald-200 bg-emerald-50/30\" : \"border-gray-100 hover:border-blue-200\"\n      )}\n    >\n      {isCompleted && (\n        <div className=\"absolute top-0 right-0 w-24 h-24 -mr-8 -mt-8 opacity-[0.07]\">\n          <svg\n            className=\"w-full h-full text-emerald-900\"\n            fill=\"currentColor\"\n            viewBox=\"0 0 24 24\"\n          >\n            <path d=\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41L9 16.17z\" />\n          </svg>\n        </div>\n      )}\n      \n      <Disclosure>\n        {({ open }) => (\n          <div>\n            <div className=\"p-5 flex items-center justify-between\">\n              <div className=\"flex items-center space-x-4\">\n                <div className=\"relative\">\n                  <input\n                    type=\"checkbox\"\n                    checked={isCompleted}\n                    onChange={() => {}}\n                    onClick={handleCheckboxClick}\n                    className=\"peer h-5 w-5 rounded-md border-2 border-gray-300 text-emerald-500 \n                             focus:ring-2 focus:ring-emerald-500 focus:ring-offset-2 transition-all duration-200\"\n                  />\n                </div>\n                <div>\n                  <h3 className={clsx(\n                    \"text-lg font-medium transition-colors duration-200\",\n                    isCompleted ? \"text-emerald-700\" : \"text-gray-900\"\n                  )}>{title}</h3>\n                </div>\n              </div>\n              <Disclosure.Button className={clsx(\n                \"p-2 rounded-lg transition-all duration-200\",\n                open ? \"bg-blue-50 text-blue-600\" : \"text-gray-400 hover:bg-gray-50 hover:text-gray-600\"\n              )}>\n                <motion.svg\n                  animate={{ rotate: open ? 180 : 0 }}\n                  transition={{ duration: 0.2 }}\n                  className=\"h-5 w-5\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  stroke=\"currentColor\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    d=\"M19 9l-7 7-7-7\"\n                  />\n                </motion.svg>\n              </Disclosure.Button>\n            </div>\n\n            <Transition\n              enter=\"transition duration-100 ease-out\"\n              enterFrom=\"transform scale-95 opacity-0\"\n              enterTo=\"transform scale-100 opacity-100\"\n              leave=\"transition duration-75 ease-out\"\n              leaveFrom=\"transform scale-100 opacity-100\"\n              leaveTo=\"transform scale-95 opacity-0\"\n            >\n              <Disclosure.Panel className=\"border-t border-gray-100\">\n                <div className=\"p-5 space-y-6\">\n                  <div className=\"text-gray-600 leading-relaxed\">\n                    {content}\n                  </div>\n\n                  {howToAnswer && (\n                    <motion.div\n                      initial={{ opacity: 0 }}\n                      animate={{ opacity: 1 }}\n                      transition={{ delay: 0.1 }}\n                      className=\"bg-gradient-to-br from-blue-50 to-indigo-50 p-5 rounded-xl border border-blue-100\"\n                    >\n                      <h4 className=\"font-semibold text-blue-900 mb-3 flex items-center\">\n                        <span className=\"mr-2\">üìù</span>\n                        How to Answer\n                      </h4>\n                      <div \n                        className=\"text-blue-800 prose prose-sm max-w-none prose-headings:text-blue-900 prose-a:text-blue-600\"\n                        dangerouslySetInnerHTML={{ __html: howToAnswer }}\n                      />\n                    </motion.div>\n                  )}\n\n                  {example && (\n                    <motion.div\n                      initial={{ opacity: 0 }}\n                      animate={{ opacity: 1 }}\n                      transition={{ delay: 0.2 }}\n                      className=\"bg-gradient-to-br from-emerald-50 to-teal-50 p-5 rounded-xl border border-emerald-100\"\n                    >\n                      <h4 className=\"font-semibold text-emerald-900 mb-3 flex items-center\">\n                        <span className=\"mr-2\">üí°</span>\n                        Example Answer\n                      </h4>\n                      <div \n                        className=\"text-emerald-800 prose prose-sm max-w-none prose-headings:text-emerald-900 prose-a:text-emerald-600\"\n                        dangerouslySetInnerHTML={{ __html: example }}\n                      />\n                    </motion.div>\n                  )}\n                </div>\n              </Disclosure.Panel>\n            </Transition>\n          </div>\n        )}\n      </Disclosure>\n    </motion.div>\n  );\n};\n\nexport default QuestionCard; "],"names":[],"mappings":";;;;AAKA;AAFA;AACA;AAAA;AAJA;;;;;AAgBA,MAAM,eAAsC,CAAC,EAC3C,KAAK,EACL,OAAO,EACP,WAAW,EACX,OAAO,EACP,WAAW,EACX,gBAAgB,EACjB;IACC,MAAM,sBAAsB,CAAC;QAC3B,EAAE,eAAe,IAAI,uCAAuC;QAC5D;IACF;IAEA,qBACE,6LAAC,6LAAA,CAAA,SAAM,CAAC,GAAG;QACT,SAAS;YAAE,SAAS;YAAG,GAAG;QAAG;QAC7B,SAAS;YAAE,SAAS;YAAG,GAAG;QAAE;QAC5B,YAAY;YAAE,UAAU;QAAI;QAC5B,WAAW,CAAA,GAAA,wIAAA,CAAA,UAAI,AAAD,EACZ,+FACA,cAAc,wCAAwC;;YAGvD,6BACC,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBACC,WAAU;oBACV,MAAK;oBACL,SAAQ;8BAER,cAAA,6LAAC;wBAAK,GAAE;;;;;;;;;;;;;;;;0BAKd,6LAAC,0LAAA,CAAA,aAAU;0BACR,CAAC,EAAE,IAAI,EAAE,iBACR,6LAAC;;0CACC,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;gDAAI,WAAU;0DACb,cAAA,6LAAC;oDACC,MAAK;oDACL,SAAS;oDACT,UAAU,KAAO;oDACjB,SAAS;oDACT,WAAU;;;;;;;;;;;0DAId,6LAAC;0DACC,cAAA,6LAAC;oDAAG,WAAW,CAAA,GAAA,wIAAA,CAAA,UAAI,AAAD,EAChB,sDACA,cAAc,qBAAqB;8DACjC;;;;;;;;;;;;;;;;;kDAGR,6LAAC,0LAAA,CAAA,aAAU,CAAC,MAAM;wCAAC,WAAW,CAAA,GAAA,wIAAA,CAAA,UAAI,AAAD,EAC/B,8CACA,OAAO,6BAA6B;kDAEpC,cAAA,6LAAC,6LAAA,CAAA,SAAM,CAAC,GAAG;4CACT,SAAS;gDAAE,QAAQ,OAAO,MAAM;4CAAE;4CAClC,YAAY;gDAAE,UAAU;4CAAI;4CAC5B,WAAU;4CACV,MAAK;4CACL,SAAQ;4CACR,QAAO;sDAEP,cAAA,6LAAC;gDACC,eAAc;gDACd,gBAAe;gDACf,aAAa;gDACb,GAAE;;;;;;;;;;;;;;;;;;;;;;0CAMV,6LAAC,0LAAA,CAAA,aAAU;gCACT,OAAM;gCACN,WAAU;gCACV,SAAQ;gCACR,OAAM;gCACN,WAAU;gCACV,SAAQ;0CAER,cAAA,6LAAC,0LAAA,CAAA,aAAU,CAAC,KAAK;oCAAC,WAAU;8CAC1B,cAAA,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;gDAAI,WAAU;0DACZ;;;;;;4CAGF,6BACC,6LAAC,6LAAA,CAAA,SAAM,CAAC,GAAG;gDACT,SAAS;oDAAE,SAAS;gDAAE;gDACtB,SAAS;oDAAE,SAAS;gDAAE;gDACtB,YAAY;oDAAE,OAAO;gDAAI;gDACzB,WAAU;;kEAEV,6LAAC;wDAAG,WAAU;;0EACZ,6LAAC;gEAAK,WAAU;0EAAO;;;;;;4DAAS;;;;;;;kEAGlC,6LAAC;wDACC,WAAU;wDACV,yBAAyB;4DAAE,QAAQ;wDAAY;;;;;;;;;;;;4CAKpD,yBACC,6LAAC,6LAAA,CAAA,SAAM,CAAC,GAAG;gDACT,SAAS;oDAAE,SAAS;gDAAE;gDACtB,SAAS;oDAAE,SAAS;gDAAE;gDACtB,YAAY;oDAAE,OAAO;gDAAI;gDACzB,WAAU;;kEAEV,6LAAC;wDAAG,WAAU;;0EACZ,6LAAC;gEAAK,WAAU;0EAAO;;;;;;4DAAS;;;;;;;kEAGlC,6LAAC;wDACC,WAAU;wDACV,yBAAyB;4DAAE,QAAQ;wDAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAYnE;KAxIM;uCA0IS"}},
    {"offset": {"line": 301, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 307, "column": 0}, "map": {"version":3,"sources":["file:///Users/mustafasaifee/Downloads/gh/mustafa-pm-prep/src/lib/events.ts"],"sourcesContent":["// Create a new file for custom events\nexport const createProgressUpdateEvent = (category: string, progress: number) => {\n  const event = new CustomEvent('progressUpdate', {\n    detail: { category, progress }\n  });\n  window.dispatchEvent(event);\n}; "],"names":[],"mappings":"AAAA,sCAAsC;;;;AAC/B,MAAM,4BAA4B,CAAC,UAAkB;IAC1D,MAAM,QAAQ,IAAI,YAAY,kBAAkB;QAC9C,QAAQ;YAAE;YAAU;QAAS;IAC/B;IACA,OAAO,aAAa,CAAC;AACvB"}},
    {"offset": {"line": 323, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 329, "column": 0}, "map": {"version":3,"sources":["file:///Users/mustafasaifee/Downloads/gh/mustafa-pm-prep/src/components/QuestionList.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { Question, CategoryId } from '@/types';\nimport QuestionCard from './ui/QuestionCard';\nimport { motion } from 'framer-motion';\nimport { createProgressUpdateEvent } from '@/lib/events';\nimport { useProgress } from '@/contexts/ProgressContext';\n\ninterface QuestionListProps {\n  questions: Question[];\n  category: string;\n  onProgressUpdate?: (progress: number) => void;\n}\n\ninterface GroupedQuestions {\n  [subcategory: string]: Question[];\n}\n\nconst container = {\n  hidden: { opacity: 0 },\n  show: {\n    opacity: 1,\n    transition: {\n      staggerChildren: 0.1\n    }\n  }\n};\n\nconst item = {\n  hidden: { opacity: 0, y: 20 },\n  show: { opacity: 1, y: 0 }\n};\n\nexport default function QuestionList({ questions, category, onProgressUpdate }: QuestionListProps) {\n  const { getProgress, updateProgress } = useProgress();\n  const [groupedQuestions, setGroupedQuestions] = useState<GroupedQuestions>({});\n  const completedQuestions = getProgress(category);\n\n  // Group questions by subcategory\n  useEffect(() => {\n    const grouped = questions.reduce<GroupedQuestions>((acc, question) => {\n      if (!acc[question.subcategory]) {\n        acc[question.subcategory] = [];\n      }\n      acc[question.subcategory].push(question);\n      return acc;\n    }, {});\n    setGroupedQuestions(grouped);\n  }, [questions]);\n\n  const toggleComplete = (questionId: string) => {\n    updateProgress(category, questionId, !completedQuestions.has(questionId));\n  };\n\n  // Calculate progress for each subcategory\n  const getSubcategoryProgress = (subcategoryQuestions: Question[]) => {\n    const completed = subcategoryQuestions.filter(q => completedQuestions.has(q.id)).length;\n    return Math.round((completed / subcategoryQuestions.length) * 100);\n  };\n\n  // Calculate and emit overall progress whenever completedQuestions changes\n  useEffect(() => {\n    const totalQuestions = questions.length;\n    const completedCount = questions.filter(q => completedQuestions.has(q.id)).length;\n    const overallProgress = Math.round((completedCount / totalQuestions) * 100);\n    onProgressUpdate?.(overallProgress);\n    createProgressUpdateEvent(category, overallProgress);\n  }, [completedQuestions, questions, category, onProgressUpdate]);\n\n  return (\n    <motion.div\n      variants={container}\n      initial=\"hidden\"\n      animate=\"show\"\n      className=\"space-y-8\"\n    >\n      {Object.entries(groupedQuestions).map(([subcategory, subcategoryQuestions]) => (\n        <motion.div\n          key={subcategory}\n          variants={item}\n          className=\"border-b pb-8 last:border-b-0\"\n        >\n          <div className=\"mb-4\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center space-x-3\">\n                <h2 className=\"text-xl font-semibold text-gray-900\">{subcategory}</h2>\n                <span className=\"text-sm text-gray-500\">\n                  ({subcategoryQuestions.length} questions)\n                </span>\n              </div>\n              <motion.span\n                initial={{ scale: 0 }}\n                animate={{ scale: 1 }}\n                className=\"text-sm text-gray-500\"\n              >\n                {getSubcategoryProgress(subcategoryQuestions)}% Complete\n              </motion.span>\n            </div>\n            <div className=\"mt-2 h-1.5 w-full bg-gray-100 rounded-full overflow-hidden\">\n              <motion.div\n                className=\"h-full bg-blue-600 rounded-full\"\n                initial={{ width: '0%' }}\n                animate={{ width: `${getSubcategoryProgress(subcategoryQuestions)}%` }}\n                transition={{ duration: 0.5, ease: 'easeOut' }}\n              />\n            </div>\n          </div>\n\n          <div className=\"space-y-4\">\n            {subcategoryQuestions.map((question) => (\n              <QuestionCard\n                key={question.id}\n                {...question}\n                isCompleted={completedQuestions.has(question.id)}\n                onToggleComplete={() => toggleComplete(question.id)}\n              />\n            ))}\n          </div>\n        </motion.div>\n      ))}\n    </motion.div>\n  );\n} "],"names":[],"mappings":"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"}},
    {"offset": {"line": 550, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}